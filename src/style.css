body {
  padding: 0;
  margin: 0;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  /*
  outline-style: dotted;
  outline-width: 3px;
  outline-color: black;
  outline-offset: -1em;
  */
  height : 100vh;
  width: 100vw;
}

#canvasHolder {
  flex-grow: 1;
  flex-shrink: 1;
  overflow: hidden;
  position: relative;
  /*
  outline-style: dotted;
  outline-width: 3px;
  outline-color: blue;
  outline-offset: -0.5em;
  */
}

/* It seems like this should say flex-shrink:1.  
 * That allocates the right amount of space.
 * But a <canvas> or an <img> will ignore that.
 * It will try to maintain the right aspect ratio.
 * Depending on other details it will leave blank space or it will try to draw past the allocate space.
 * flex-grow:1 works perfectly but sometime flex-shrink does not. */
#canvas {
  position: absolute;
  top:0;
  left:0;
}

#nudgeControls {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: baseline;
  gap: 1em;
}

#dollyZoomControls {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-end;
  column-gap: 0.5em; 
}

#dollyZoomInput {
  flex: 1 1;
  min-width: 2em;
}

#controls {
  flex-grow: 1;
}

#fovDisplay {
  display: flex;
  align-items: center;
  justify-items: center;
}

#fovSvg {
  width: 3.75em;
  height: 3.75em;
}

#bottom {
  display: flex;
  flex-direction: row;
}

.simpleBorder {
  border-style: solid;
  border-color: #ccc;
  border-width: 0.25em;
  margin: 0.25em;
  padding: 0.25em;
  border-radius: 0.5em;
}
